{"version":3,"sources":["model.ts","components/Icon.tsx","components/SelectColor.tsx","components/EditPathway.tsx","components/SelectOrCreatePathway.tsx","components/ImportData.tsx","components/ToolbarModes.tsx","components/Controller.tsx","index.tsx"],"names":["Colors","Icon","props","color","spanClass","container","join","react_default","a","createElement","className","react_fontawesome_index_es","icon","size","iconSize","SelectColor","style","borderColor","selected","borderWidth","map","onClick","e","key","type","faCircle","EditPathway","_this","Object","classCallCheck","this","existingPathway","possibleConstructorReturn","getPrototypeOf","call","pathways","find","pathway","id","state","name","undefined","duplicateNameError","noNameError","noColorError","handleChange","bind","assertThisInitialized","handleSubmit","setColor","event","_this2","target","value","setState","trim","some","toLowerCase","preventDefault","error","onSubmit","_this3","goBack","faArrowLeft","title","display","placeholder","onChange","faExclamationTriangle","faPlus","submitButtonText","onDelete","faMinusCircle","React","Component","SelectOrCreatePathway","PathwayItem","assign","selectPathway","onSelect","onCreate","_","ImportData","input","createRef","handleUpload","files","current","reader","FileReader","onabort","console","log","onerror","onload","result","model","JSON","parse","setModel","readAsText","acceptedFiles","padding","ref","faUpload","ToolbarHome","faBoxes","faBezierCurve","become","CreatePathway","faPlusCircle","SelectPathwayToEdit","faEdit","ImportDataAction","ExportData","faDownload","pathwayIds","p","newId","length","Math","max","apply","toConsumableArray","EditPathway_EditPathway","updatePathway","deletePathway","EditThisPathway","ImportData_ImportData","blob","Blob","stringify","saveAs","DB","initialState","mode","data","assets","links","undo","redo","dirty","Controller","savedState","localStorage","getItem","objectSpread","persistData","slice","push","pop","setTimeout","callback","obj","shift","setItem","setData","i","findIndex","splice","filter","link","idx","position","top","left","maxWidth","right","disabled","faUndo","faRedo","ReactDOM","render","components_Controller","document","getElementById"],"mappings":"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","file":"static/js/main.88022365.chunk.js","sourcesContent":["export interface Model {\n    assets : Array<Node>,\n    links : Array<Link>,\n    pathways : Array<Pathway>\n}\n\nexport interface Node {\n    id : NodeId,\n    name : string,\n    color : Color\n}\n\nexport interface Link {\n    src : NodeId,\n    dst : NodeId,\n    pathway : PathwayId\n}\n\nexport interface Pathway {\n    id : PathwayId,\n    name : string,\n    color : Color\n}\n\nexport type Color                  =  'light-blue' | 'purple' | 'light-green' | 'red' | 'orange-yellow';\nexport const Colors : Array<Color> = ['light-blue' , 'purple' , 'light-green' , 'red' , 'orange-yellow'];\n\nexport type NodeId = number;\nexport type PathwayId = number;\nexport type Handler<T> = (e : T) => void;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { Color } from '../model';\n\ninterface Props {\n    icon : IconProp,\n    color? : Color,\n    container? : 'small' | 'medium' | 'large',\n    iconSize? : 'lg' | '2x' | '3x'\n}\n\nexport default function Icon(props : Props) {\n    const color    = props.color ? 'has-text-' + props.color : '';\n    const spanSize = props.container ? 'is-' + props.container : '';\n    const spanClass = ['icon', spanSize, color].join(' ');\n\n    return (<span className={spanClass}>\n                <FontAwesomeIcon icon={props.icon} size={props.iconSize} />\n            </span>);\n}\n                ","import React from 'react';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\nimport {Color,Colors,Handler} from '../model';\nimport Icon from './Icon';\n\ninterface Props {\n    selected? : Color,\n    onClick : Handler<Color>\n}\n\n\nexport default function SelectColor(props : Props) {\n    function style(color : Color) {\n        return {\n            borderColor: color === props.selected ? '#777' : 'transparent',\n            borderWidth: '2px'\n        }\n    }\n\n    return (<div className=\"buttons is-centered\">\n        {Colors.map((color) => \n            <button onClick={(e) => props.onClick(color)}\n              className=\"button is-hovered is-large\" key={color} type=\"button\" style={style(color)}>\n                <Icon icon={faCircle} color={color} container='medium' iconSize='2x' />\n            </button>)}\n    </div>)\n}","import React from 'react';\nimport { faPlus, faExclamationTriangle, faArrowLeft, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\nimport {Color, Model, PathwayId, Handler, Pathway} from '../model';\nimport SelectColor from './SelectColor';\nimport Icon from './Icon';\n\ninterface Props extends Model {\n    id : PathwayId,\n    onSubmit : Handler<Pathway>,\n    onDelete? : Handler<PathwayId>,\n    goBack : Handler<any>,\n    title : string,\n    submitButtonText : string,\n}\n\ninterface State {\n    name : string,\n    color? : Color,\n    duplicateNameError : boolean,\n    noNameError : boolean,\n    noColorError : boolean,\n}\n\nexport default class EditPathway extends React.Component<Props, State> {\n    constructor(props : Props) {\n        super(props);\n\n        let existingPathway = this.props.pathways.find((pathway) => pathway.id === props.id);\n        this.state = { \n            name: existingPathway ? existingPathway.name : \"\", \n            color: existingPathway ? existingPathway.color : undefined, \n            duplicateNameError: false, noNameError: false, noColorError: false \n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setColor = this.setColor.bind(this);\n    }\n    handleChange(event : React.ChangeEvent<HTMLInputElement>) {\n        const name = event.target.value;\n\n        this.setState({ \n            name: name, \n            noNameError: this.state.noNameError && name.trim() === '',\n            // Do there exist pathways *with a different id* and the same name?\n            duplicateNameError: this.props.pathways.some((pathway) =>\n                pathway.id !== this.props.id && pathway.name.toLowerCase() === name.trim().toLowerCase()\n            )\n        });\n    }\n    setColor(color : Color) {\n        this.setState({ color: color, noColorError: false });\n    }\n    handleSubmit(event : React.FormEvent) {\n        event.preventDefault();\n\n        let error = this.state.duplicateNameError;\n        // Make sure the name is nonempty and a color is selected\n        if (this.state.color === undefined) {\n            this.setState({ noColorError: true });\n            error = true;\n        }\n        if (this.state.name.trim() === '') {\n            this.setState({ noNameError: true });\n            error = true;\n        }\n        if (!error) {\n            // Notice that if `color` were undefined then `error` would be true.\n            // Therefore we can assert it isn't undefined below.\n            this.props.onSubmit({\n                id: this.props.id,\n                name: this.state.name.trim(),\n                color: this.state.color as Color\n            });\n        }\n    }\n    render() {\n        return (<nav className=\"panel\">\n\n            <div className=\"panel-heading\">\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <div className=\"level-item\">\n                        <button type=\"button\" className=\"button\" onClick={this.props.goBack}>\n                            <Icon icon={faArrowLeft} />\n                        </button>\n                    </div>\n                    <div className=\"level-item\">\n                        <p>{this.props.title}</p>\n                    </div>\n                </div>\n            </div>\n            </div>\n\n            <form className=\"panel-block\" onSubmit={this.handleSubmit} style={{display: \"block\"}}>\n            <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <div className=\"control\">\n                    <input className=\"input\" placeholder=\"Pathway name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                </div>\n                {this.state.noNameError && \n                    <p className=\"help is-danger\">\n                        <Icon icon={faExclamationTriangle} />\n                        Please enter a name for the pathway.\n                    </p> \n                }\n                {this.state.duplicateNameError && \n                    <p className=\"help is-danger\">\n                        <Icon icon={faExclamationTriangle} />\n                        A pathway with that name already exists.\n                    </p> \n                }\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Color</label>\n                <SelectColor selected={this.state.color} onClick={this.setColor} />\n                {this.state.noColorError && \n                    <p className=\"help is-danger\">\n                        <Icon icon={faExclamationTriangle} />\n                        Please select a color for this pathway.\n                    </p> \n                }\n            </div>\n\n            <div className=\"buttons\">\n            <button className=\"button is-primary is-fullwidth\">\n                <Icon icon={faPlus} />\n                <span>{this.props.submitButtonText}</span>\n            </button>\n\n            { this.props.onDelete &&\n                <button className=\"button is-hover is-danger is-outlined is-fullwidth\" \n                        type=\"button\" onClick={() => this.props.onDelete!(this.props.id)}>\n                    <Icon icon={faMinusCircle} />\n                    <span>Delete Pathway</span>\n                </button>\n            }\n            </div>\n        </form>\n        </nav>);\n    }\n}","import React from 'react';\nimport Icon from './Icon';\nimport { faCircle, faPlus, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport {Handler,Pathway,PathwayId} from '../model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface Props {\n    pathways : Array<Pathway>, \n    onCreate? : Handler<any>,\n    onSelect : Handler<PathwayId>,\n    goBack : Handler<any>,\n}\n\nexport default function SelectOrCreatePathway(props : Props) {\n    return (<nav className=\"panel\">\n        <div className=\"panel-heading\">\n            <div className=\"level\">\n                <div className=\"level-left\">\n                    <div className=\"level-item\">\n                        <button className=\"button\" onClick={props.goBack}>\n                            <Icon icon={faArrowLeft} />\n                        </button>\n                    </div>\n                    <div className=\"level-item\">\n                        <p >Pathways</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        {props.pathways.map((pathway) => \n            <PathwayItem key={pathway.name} {...pathway} selectPathway={props.onSelect} />\n        )}\n\n        {props.onCreate &&\n            <div className=\"panel-block\">\n                <button onClick={props.onCreate} type=\"button\" className=\"button is-white is-fullwidth\">\n                    <Icon icon={faPlus} />\n                    <span> Create a new pathway</span>\n                </button>\n            </div>\n        }\n    </nav>);\n}\n\nfunction PathwayItem(props : Pathway & { selectPathway : Handler<PathwayId> }) {\n    return (<label className=\"panel-block\" onClick={(_) => props.selectPathway(props.id)}>\n                <span className={\"panel-icon has-text-\" + props.color}>\n                    <FontAwesomeIcon icon={faCircle} />\n                </span>\n                {props.name}\n            </label>);\n}","import React from 'react';\n// import Dropzone from 'react-dropzone';\nimport { faArrowLeft, faUpload } from '@fortawesome/free-solid-svg-icons'\nimport {Model, Handler} from '../model';\nimport Icon from './Icon';\n\ninterface Props extends Model {\n    goBack : Handler<any>,\n    setModel : Handler<Model>\n}\n\nexport default class ImportData extends React.Component<Props,{}> {\n    input : React.RefObject<HTMLInputElement>\n\n    constructor(props : Props) {\n        super(props);\n        this.input = React.createRef();\n        this.handleUpload = this.handleUpload.bind(this);\n    }\n\n    handleUpload(event : React.ChangeEvent<HTMLInputElement>) {\n        const f = this.input.current as HTMLInputElement;\n        const files = f.files as FileList;\n\n        const reader = new FileReader();\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload  = () => {\n            console.log(reader.result);\n            const model = JSON.parse(reader.result as string) as Model;\n            console.log(model);\n            this.props.setModel(model);\n        }\n        reader.readAsText(files[0]);\n    }\n\n    importFile<T extends File>(acceptedFiles : T[]) {\n    }\n\n\n    render() {\n        return (\n            <nav className=\"panel\">\n\n                <div className=\"panel-heading\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <button className=\"button\" onClick={this.props.goBack}>\n                                <Icon icon={faArrowLeft} />\n                            </button>\n                        </div>\n                        <div className=\"level-item\">\n                            <p>Import Data File</p>\n                        </div>\n                    </div>\n                </div>\n                </div>\n\n                <div className=\"panel-block\" style={{padding: \"3rem\"}}>\n                <div className=\"file is-boxed is-centered is-vcentered\">\n                    <label className=\"file-label\">\n                        <input className=\"file-input\" type=\"file\" ref={this.input} onChange={this.handleUpload} />\n                        <span className=\"file-cta\">\n                            <span className=\"file-icon\">\n                                <Icon icon={faUpload} />\n                            </span>\n                            <span className=\"file-label\">\n                                Choose a file…\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                </div>\n\n            </nav>);\n    }\n}","import React from 'react';\nimport {Handler, Model, Pathway, PathwayId} from '../model';\nimport EditPathway from './EditPathway';\nimport SelectOrCreatePathway from './SelectOrCreatePathway';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBoxes, faBezierCurve, faEdit, faPlusCircle, faDownload, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { saveAs } from 'file-saver';\nimport ImportData from './ImportData';\n\nexport interface Props {\n    model : Model,\n    become : Handler<(props : Props) => React.ReactElement>,\n    updatePathway : Handler<Pathway>,\n    deletePathway : Handler<PathwayId>,\n    setModel : Handler<Model>\n}\n\nexport function ToolbarHome(props : Props) {\n    return (<nav className=\"panel\">\n        <div className=\"panel-heading\">Select an Action</div>\n\n        <p className=\"panel-block\" onClick={(_) => null}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faBoxes} />\n            </span>\n            Create Node\n        </p>\n\n        <p className=\"panel-block\" onClick={(_) => null}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faBezierCurve} />\n            </span>\n            Create Link\n        </p>\n\n        <label className=\"panel-block\" onClick={(_) => props.become(CreatePathway)}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faPlusCircle} />\n            </span>\n            Create Pathway\n        </label>\n\n        <label className=\"panel-block\" onClick={(_) => props.become(SelectPathwayToEdit)}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faEdit} />\n            </span>\n            Edit Pathway\n        </label>\n\n        <label className=\"panel-block\" onClick={(_) => props.become(ImportDataAction)}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faUpload} />\n            </span>\n            Import Data\n        </label>\n\n        <label className=\"panel-block\" onClick={(_) => props.become(ExportData)}>\n            <span className=\"panel-icon\">\n                <FontAwesomeIcon icon={faDownload} />\n            </span>\n            Export Data\n        </label>\n\n    </nav>);\n}\n\n\n/**** Workflow for the \"create pathway\" option ****/\n\nfunction CreatePathway(props : Props) {\n    const pathwayIds = props.model.pathways.map((p : Pathway) => p.id);\n    const newId = pathwayIds.length > 0 ? 1 + Math.max(...pathwayIds) : 1;\n\n    function onSubmit(p : Pathway) {\n        props.updatePathway(p);\n        props.become(ToolbarHome);\n    }\n\n    return <EditPathway {...props.model} id={newId} onSubmit={onSubmit} \n                goBack={(_) => props.become(ToolbarHome)}\n                title=\"Create a Pathway\"\n                submitButtonText=\"Create\" />\n}\n\n\n/**** Workflow for the \"edit pathway\" option ****/\n\nfunction SelectPathwayToEdit(props : Props) {\n    return <SelectOrCreatePathway pathways={props.model.pathways} \n                goBack={(_) => props.become(ToolbarHome)}\n                onSelect={(id : PathwayId) => props.become(EditThisPathway(id))} />;\n}\n\nfunction EditThisPathway(id : PathwayId) {\n    return function (props : Props) {\n\n        function onSubmit(p : Pathway) {\n            props.updatePathway(p);\n            props.become(SelectPathwayToEdit);\n        }\n\n        function onDelete(id : PathwayId) {\n            props.deletePathway(id);\n            props.become(SelectPathwayToEdit);\n        }\n\n        return <EditPathway {...props.model} id={id} onSubmit={onSubmit} \n                    onDelete={onDelete}\n                    goBack={(_) => props.become(SelectPathwayToEdit)}\n                    title=\"Edit Pathway\"\n                    submitButtonText=\"Confirm changes\" />;\n    };\n}\n\n\n/**** Workflow for the \"export data\" option ****/\n\nfunction ImportDataAction(props : Props) {\n\n    function onUpload(model : Model) {\n        props.setModel(model);\n        props.become(ToolbarHome);\n    }\n\n    return <ImportData {...props.model} \n                goBack={() => props.become(ToolbarHome)} \n                setModel={onUpload} />\n}\n\n\n/**** Workflow for the \"export data\" option ****/\n\nfunction ExportData(props : Props) {\n    const blob = new Blob([JSON.stringify(props.model, null, 2)], {type: \"application/json;charset=utf-8\"});\n    saveAs(blob, \"atlas.json\");\n    return ToolbarHome(props);\n}","import React from 'react';\nimport {Model, Pathway, PathwayId, Link} from '../model';\nimport { ToolbarHome, Props as ModeProps } from './ToolbarModes';\nimport Icon from './Icon';\nimport { faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\n\n\nconst DB = \"AppState\";\nconst PERSIST_DATA_TIMEOUT = 5000;\nconst MAX_UNDO_SIZE = 50;\n\n\ninterface Data {\n    model : Model,\n    undo  : Model[],\n    redo  : Model[],\n}\n\ninterface State {\n    mode  : (props : ModeProps) => React.ReactElement,\n    data  : Data,\n    dirty : Boolean,\n}\n\nconst initialData : Data = {\n    model: {\n        assets: [],\n        links: [],\n        pathways: [],\n    },\n    undo: [],\n    redo: [],\n}\n\nconst initialState : State = {\n    mode: ToolbarHome,\n    data: initialData,\n    dirty: false,\n};\n\n\nfunction deepCopy(obj : Object) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n\nclass Controller extends React.Component<{},State> {\n\n    constructor(props : any) {\n        super(props);\n\n        const savedState = localStorage.getItem(DB);\n        if (savedState === null) {\n            this.state = {...initialState};\n        }\n        if (savedState !== null) {\n            const data = JSON.parse(savedState) as Data;\n            this.state = Object.assign(initialState, {data});\n        }\n\n        this.become = this.become.bind(this);\n        this.deletePathway = this.deletePathway.bind(this);\n        this.updatePathway = this.updatePathway.bind(this);\n        this.undo = this.undo.bind(this);\n        this.redo = this.redo.bind(this);\n        this.setModel = this.setModel.bind(this);\n        this.persistData = this.persistData.bind(this);\n    }\n\n    become(mode : (props : ModeProps) => React.ReactElement) {\n        this.setState({mode: mode});\n    }\n\n    undo() {\n        const data = this.state.data;\n        if (data.undo.length > 0) {\n            // Make a copy of 'redo' with the current model pushed onto it\n            const redo = data.redo.slice();\n            redo.push(data.model);\n\n            // Make a copy of 'redo' with the new model popped from it\n            const undo = data.undo.slice();\n            const model = undo.pop() as Model;\n\n            if (!this.state.dirty) {\n                setTimeout(this.persistData, PERSIST_DATA_TIMEOUT);\n            }\n            this.setState({ data: { model, undo, redo }, dirty: true });\n        }\n    }\n\n    redo() {\n        const data = this.state.data;\n        if (data.redo.length > 0) {\n            // Make a copy of 'undo' with the current model pushed onto it\n            const undo = data.undo.slice();\n            undo.push(data.model);\n\n            // Make a copy of 'redo' with the new model popped from it\n            const redo = data.redo.slice();\n            const model = redo.pop() as Model;\n\n            if (!this.state.dirty) {\n                setTimeout(this.persistData, PERSIST_DATA_TIMEOUT);\n            }\n            this.setState({ data: { model, undo, redo }, dirty: true });\n        }\n    }\n\n    /**\n     * This method allows us to conveniently modify the underlying Model while\n     * automatically managing the undo history.\n     * - Provides a deep copy of the current model to the method for mutation\n     * - Throws away the current redo buffer\n     * - Appends the old model to the undo buffer\n     * \n     * @param callback This function will be passed a copy of the current model\n     *    that can be freely mutated. The returned value will be the new model.\n     */\n    setData(callback : (model : Model) => Model) {\n        // Make a copy of 'undo' with the current model pushed to it\n        // Throw away the 'redo' buffer\n        // Provide a mutable copy of the model to use\n        const data = this.state.data;\n        const redo : Model[] = [];\n        const undo = data.undo.slice();\n        undo.push(data.model);\n        const model = deepCopy(data.model) as Model;\n\n        // Now that we've made a modification, schedule a file storage event\n        if (!this.state.dirty) {\n            setTimeout(this.persistData, PERSIST_DATA_TIMEOUT);\n        }\n        // If the undo buffer is too large, drop the oldest element\n        if (undo.length > MAX_UNDO_SIZE) {\n            undo.shift();\n        }\n\n        this.setState({ \n            data: { undo, redo, model: callback(model)},\n            dirty: true \n        });\n    }\n\n\n    persistData() {\n        localStorage.setItem(DB, JSON.stringify(this.state.data));\n        this.setState({ dirty: false });\n    }\n\n\n    deletePathway(id : PathwayId) {\n        this.setData((model : Model) => {\n            // Remove this pathway from the list of pathways\n            const i = model.pathways.findIndex((p : Pathway) => p.id === id);\n            model.pathways.splice(i, 1);\n\n            // Remove all links belonging to this pathway\n            model.links = model.links.filter((link : Link) => link.pathway !== id);\n\n            return model;\n        })\n    }\n\n    updatePathway(pathway : Pathway) {\n        this.setData((model : Model) => {\n            // If this pathway is new, add it; otherwise modify the existing entry\n            const idx = model.pathways.findIndex((p) => p.id === pathway.id);\n            if (idx === -1) {\n                model.pathways.push(pathway);\n            }\n            else {\n                model.pathways[idx] = pathway;\n            }\n            return model;\n        })\n    }\n\n    setModel(model : Model) {\n        this.setData((_ : Model) => model);\n    }\n\n    render() {\n        return (\n            <div>\n            <div style={{position: \"fixed\", top: \"2rem\", left: \"1.5rem\", maxWidth: \"400px\"}}>\n            {\n                this.state.mode({\n                    model: this.state.data.model,\n                    become: this.become,\n                    updatePathway: this.updatePathway,\n                    deletePathway: this.deletePathway,\n                    setModel: this.setModel\n                })\n            }\n            </div>\n            <div style={{position: \"fixed\", top: \"2rem\", right: \"1.5rem\"}}>\n                <div className=\"field has-addons\">\n                <p className=\"control\">\n                    <button className=\"button\" \n                        onClick={this.undo}\n                        disabled={this.state.data.undo.length === 0}>\n                    <span className=\"icon is-small\">\n                        <Icon icon={faUndo} />\n                    </span>\n                    <span>Undo</span>\n                    </button>\n                </p>\n                <p className=\"control\">\n                    <button className=\"button\" \n                        onClick={this.redo}\n                        disabled={this.state.data.redo.length === 0}>\n                    <span className=\"icon is-small\">\n                        <Icon icon={faRedo} />\n                    </span>\n                    <span>Redo</span>\n                    </button>\n                </p>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Controller;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Controller from './components/Controller';\nimport './style.scss';\n\nReactDOM.render(<Controller />, document.getElementById(\"root\"));\n"],"sourceRoot":""}